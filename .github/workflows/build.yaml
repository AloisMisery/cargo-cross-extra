name: Build

on:
  push:
    branches: [ main ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include: [
          { target: 'x86_64-pc-windows-msvc' },
          { target: 'x86_64-apple-darwin' },
          { target: 'i686-pc-windows-msvc' },
          { target: 'i686-apple-darwin' },
          { target: 'aarch64-pc-windows-msvc' },
          { target: 'aarch64-apple-darwin' },
        ]

    steps:
      - name: (🛠️ Debug) Inspect workflow env
        run: |
          echo '=================================='
          echo '::group:: [>>>] toJSON(github):'
          echo '${{ toJSON(github) }}'
          echo '::endgroup::'
          echo '::group:: [>>>] toJSON(secrets):'
          echo '${{ toJSON(secrets) }}'
          echo '::endgroup::'
          echo '::group:: [>>>] toJSON(vars):'
          echo '${{ toJSON(vars) }}'
          echo '::endgroup::'
          echo '::group:: [>>>] toJSON(env):'
          echo '${{ toJSON(env) }}'
          echo '::endgroup::'
          echo '::group:: [>>>] toJSON(inputs):'
          echo '${{ toJSON(inputs) }}'
          echo '::endgroup::'
          echo '=================================='
          echo '::group:: [>>>] env | sort:'
          env | sort
          echo '::endgroup::'
          echo '=================================='


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross


      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build cross image
        run: ./build-cross-images.sh "${{ matrix.target }}"
